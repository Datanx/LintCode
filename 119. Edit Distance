public class Solution {
    /**
     * @param word1: A string
     * @param word2: A string
     * @return: The minimum number of steps.
     */
    public int minDistance(String word1, String word2) {
        char[] A = word1.toCharArray();
        char[] B = word2.toCharArray();
        
        int m = A.length;
        int n = B.length;
        
        int[][] f = new int[m+1][n+1];
        int i,j,k;
        for(i = 0; i <= m; ++i){
            for(j = 0; j <= n; ++j){
                if(i == 0){
                    f[i][j] = j;
                    continue;
                }
                
                if(j == 0){
                    f[i][j] = i;
                    continue;
                }
                
                // i > 0, j > 0
                f[i][j] = Math.min(Math.min(f[i-1][j], f[i][j-1]), f[i-1][j-1]) + 1;
                
                if(A[i-1] == B[j-1]){
                    f[i][j] = Math.min(f[i][j], f[i-1][j-1]);
                }
            }
        }
        return f[m][n];
        
    }
}
