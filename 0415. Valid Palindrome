/*
使用两根指针遍历整个字符串即可.

假定有指针i, j, 其中i是从前往后遍历, j是从后往前遍历.

当i在j左边时继续循环, 每一次将i右移到数字/字母上, j左移到数字/字母上,

比较二者对应的字符串内的字符是否相同, 不相同则原字符串不是回文串.

如果全部的比较都相同, 说明是回文串.
*/

class Solution {
public:
    /**
     * @param s: A string
     * @return: Whether the string is a valid palindrome
     */
    bool isPalindrome(string &s) {
        for(int i = 0, j = s.size() - 1; i < j; i++, j--){
            while(!isdigit(s[i]) && !isalpha(s[i]) && i < j)
                i++;
            while(!isdigit(s[j]) && !isalpha(s[j]) && i < j)
                j--;
            if(i < j && tolower(s[i]) != tolower(s[j]))
                return false;
        }
        return true;
    }
};
