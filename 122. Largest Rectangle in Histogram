public class Solution {
    /**
     * @param height: A list of integer
     * @return: The area of largest rectangle in the histogram
     */
    public int largestRectangleArea(int[] height) {
        // write your code here
        if(height == null || height.length == 0)
        {
            return 0;
        }
        
        Stack<Integer> stack = new Stack<Integer>();
        int max = 0;
        for(int i = 0; i <= height.length; ++i){
            int curt = (i == height.length)? -1 : height[i];
            // insert -1 at the end
            
            while(!stack.isEmpty() && curt <= height[stack.peek()]){
                //kick out
                int h = height[stack.pop()]; //this is the height of the bar just kicked out
                int left = stack.isEmpty()? 0: (stack.peek() + 1);
                int right = i -1;
                int thisArea = h * (right - left + 1);
                max = Math.max(thisArea, max);
                
            }
            stack.push(i);
        }
        return max;
    }
}
