class Solution {
public:
    /**
     * @param t: the length of the flight
     * @param dur: the length of movies 
     * @return: output the lengths of two movies
     */
   int find(vector<int> &dur, int need, int pos) {
        int l = 0, r = pos;
        while(l <= r) {
            int mid = (l + r) >> 1;
            if(dur[mid] <= need) {
                l=mid+1;
            }
            else {
                r=mid-1;
            }
            
        }
        if(r == -1) {
            r++;
        }
        return dur[r];
    }
    vector<int> aerial_Movie(int t, vector<int> &dur) {
        // Write your code here
        t -= 30;
        vector<int> res;
        int ans = 0;
        sort(dur.begin() , dur.end());
        for(int i = dur.size() - 1 ; i >= 1 ; i--) {
             if(dur[i] < t) {
                 int tmp = find(dur, t-dur[i], i-1);
                 if(tmp <= t - dur[i] && tmp + dur[i] > ans) {
                     ans = tmp + dur[i];
                     res.clear();
                     res.push_back(tmp);
                     res.push_back(dur[i]);
                     
                 }
             }
        }
        return res;
    }
};
