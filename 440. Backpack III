public class Solution {
    /**
     * @param A: an integer array
     * @param V: an integer array
     * @param m: An integer
     * @return: an array
     */
    public int backPackIII(int[] A, int[] V, int m) {
        int n = A.length;
        if(n == 0){
            return 0;
        }
        
        int[] f = new int[m + 1];
        int i, w;
        f[0] = 0; // f[0][0]
        for(i = 1; i <= m; ++i){
            f[i] = -1; //f[0][i] = -1;
        }
        
        for(i = 1; i <= n; ++i){
            for(w = A[i - 1]; w <= m; ++w){
                // f[w - A[i - 1]] is f[i][w - A[i - 1]]
                f[w] = Math.max(f[w], f[w - A[i - 1]] + V[i - 1]);
            }
        }
        
        
        int res = 0;
        for(w = 0; w <= m; ++w){
            if(f[w] != -1){
                res = Math.max(res, f[w]);
            }
        }
        return res;
    }
}
